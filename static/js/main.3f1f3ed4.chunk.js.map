{"version":3,"sources":["index.js"],"names":["Square","props","highlight","className","onClick","value","Board","i","isHighlighted","this","squares","board","result","boardRow","j","iCell","push","renderSquare","renderBoard","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","orderedChecked","isReversedMoves","copiedOrReversedOrderChecked","toggleMoves","bind","slice","cloneSquares","length","cloneOrderChecked","concat","calculateWinner","setState","step","reverse","moves","status","current","winner","map","move","desc","key","jumpTo","handleClick","reversed","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"4MAIA,SAASA,EAAOC,GACd,OAAIA,EAAMC,UAEN,4BAAQC,UAAU,mBAAmBC,QAAS,kBAAMH,EAAMG,YACvDH,EAAMI,OAKT,4BAAQF,UAAU,SAASC,QAAS,kBAAMH,EAAMG,YAC7CH,EAAMI,O,IAMTC,E,2KACSC,EAAGC,GAAgB,IAAD,OAC7B,OACE,kBAACR,EAAD,CACEE,UAAWM,EACXH,MAAOI,KAAKR,MAAMS,QAAQH,GAC1BH,QAAS,kBAAM,EAAKH,MAAMG,QAAQG,Q,oCAQtC,IAFA,IAAII,EAAQ,GACNC,EAASH,KAAKR,MAAMW,OACjBL,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAIM,EAAW,GACNC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAMC,EAAY,EAAJR,EAAQO,GAEpBF,GACCA,EAAO,KAAOG,GAASH,EAAO,KAAOG,GAASH,EAAO,KAAOG,EAG1DF,EAASG,KAAKP,KAAKQ,aAAaF,GAAO,IAD1CF,EAASG,KAAKP,KAAKQ,aAAaF,GAAO,IAG3CJ,EAAMK,KAAK,yBAAKb,UAAU,aAAaU,IAEzC,OAAOF,I,+BAIP,OAAO,6BAAMF,KAAKS,mB,GA/BFC,IAAMC,WAmCpBC,E,kDACJ,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IACDqB,MAAQ,CACXC,QAAS,CACP,CACEb,QAASc,MAAM,GAAGC,KAAK,QAG3BC,SAAS,EACTC,WAAY,EACZC,eAAgBJ,MAAM,GACtBK,iBAAiB,EACjBC,6BAA8BN,MAAM,IAEtC,EAAKO,YAAc,EAAKA,YAAYC,KAAjB,gBAdF,E,wDAiBPzB,GACV,IAAMgB,EAAUd,KAAKa,MAAMC,QAAQU,MAAM,EAAGxB,KAAKa,MAAMK,WAAa,GAE9DO,EADUX,EAAQA,EAAQY,OAAS,GACZzB,QAAQuB,QAC/BG,EAAoB3B,KAAKa,MAAMM,eAAeS,OAAO9B,GACvD+B,EAAgBJ,IAAiBA,EAAa3B,KAGlD2B,EAAa3B,GAAKE,KAAKa,MAAMI,QAAU,IAAM,IAC7CjB,KAAK8B,SAAS,CACZhB,QAASA,EAAQc,OAAO,CAAC,CAAE3B,QAASwB,KACpCR,SAAUjB,KAAKa,MAAMI,QACrBC,WAAYJ,EAAQY,OACpBP,eAAgBQ,EAChBN,6BAA8BM,O,6BAI3BI,GACL/B,KAAK8B,SAAS,CACZZ,WAAYa,EACZd,QAASc,EAAO,IAAM,M,oCAKxB/B,KAAK8B,SAAS,CACZV,iBAAkBpB,KAAKa,MAAMO,gBAC7BC,6BAA8BrB,KAAKa,MAAMQ,6BACtCG,QACAQ,c,+BAIG,IAMJC,EA4BAC,EAlCG,OACDpB,EAAUd,KAAKa,MAAMC,QACrBqB,EAAUrB,EAAQd,KAAKa,MAAMK,YAE7Bf,EAAS0B,EAAgBM,EAAQlC,SACjCmC,EAASjC,GAAUA,EAAO,GAsChC,OApCA8B,EAAQnB,EAAQuB,KAAI,SAACN,EAAMO,IACU,IAA/B,EAAKzB,MAAMO,kBACbkB,EAAOxB,EAAQY,OAAS,EAAIY,GAE9B,IAAMhC,EAAQ,EAAKO,MAAMQ,6BAA6BiB,EAAO,GAGvDC,EAAOD,EACT,eAAiBA,EAAO,QAHZhC,EAAQ,GAGkB,KAF7BA,EAAQ,EAEmC,IACpD,mBACJ,OAAIgC,IAAS,EAAKzB,MAAMK,WAEpB,wBAAIsB,IAAKF,GACP,4BAAQ3C,QAAS,kBAAM,EAAK8C,OAAOH,KACjC,2BAAIC,KAMR,wBAAIC,IAAKF,GACP,4BAAQ3C,QAAS,kBAAM,EAAK8C,OAAOH,KAAQC,OAQjDL,EADEE,EACO,WAAaA,EACiB,KAA9BpC,KAAKa,MAAMC,QAAQY,OACnB,eAEA,iBAAmB1B,KAAKa,MAAMI,QAAU,IAAM,KAIvD,yBAAKvB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CACEM,OAAQA,EACRF,QAASkC,EAAQlC,QACjBN,QAAS,SAACG,GAAD,OAAO,EAAK4C,YAAY5C,OAGrC,yBAAKJ,UAAU,aACb,6BAAMwC,GACN,4BACE,4BACE,4BAAQvC,QAASK,KAAKsB,aAAtB,mBAG4B,IAA/BtB,KAAKa,MAAMO,iBAA6B,4BAAKa,IACd,IAA/BjC,KAAKa,MAAMO,iBAA4B,wBAAIuB,UAAQ,GAAEV,S,GAhH7CvB,IAAMC,WA2HzB,SAASkB,EAAgB5B,GAWvB,IAVA,IAAM2C,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA9C,EAAI,EAAGA,EAAI8C,EAAMlB,OAAQ5B,IAAK,CAAC,IAAD,cACnB8C,EAAM9C,GADa,GAC9B+C,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI9C,EAAQ4C,IAAM5C,EAAQ4C,KAAO5C,EAAQ6C,IAAM7C,EAAQ4C,KAAO5C,EAAQ8C,GACpE,MAAO,CAAC9C,EAAQ4C,GAAIA,EAAGC,EAAGC,GAG9B,OAAO,KAnBTC,IAASC,OAAO,kBAACrC,EAAD,MAAUsC,SAASC,eAAe,U","file":"static/js/main.3f1f3ed4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nfunction Square(props) {\r\n  if (props.highlight) {\r\n    return (\r\n      <button className=\"square highlight\" onClick={() => props.onClick()}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  } else {\r\n    return (\r\n      <button className=\"square\" onClick={() => props.onClick()}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i, isHighlighted) {\r\n    return (\r\n      <Square\r\n        highlight={isHighlighted}\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderBoard() {\r\n    let board = [];\r\n    const result = this.props.result;\r\n    for (let i = 0; i < 3; i++) {\r\n      let boardRow = [];\r\n      for (let j = 0; j < 3; j++) {\r\n        const iCell = i * 3 + j;\r\n        if (\r\n          result &&\r\n          (result[1] === iCell || result[2] === iCell || result[3] === iCell)\r\n        )\r\n          boardRow.push(this.renderSquare(iCell, true));\r\n        else boardRow.push(this.renderSquare(iCell, false));\r\n      }\r\n      board.push(<div className=\"board-row\">{boardRow}</div>);\r\n    }\r\n    return board;\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.renderBoard()}</div>;\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n        },\r\n      ],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n      orderedChecked: Array(0),\r\n      isReversedMoves: false,\r\n      copiedOrReversedOrderChecked: Array(0),\r\n    };\r\n    this.toggleMoves = this.toggleMoves.bind(this);\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const cloneSquares = current.squares.slice();\r\n    const cloneOrderChecked = this.state.orderedChecked.concat(i);\r\n    if (calculateWinner(cloneSquares) || cloneSquares[i]) {\r\n      return;\r\n    }\r\n    cloneSquares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([{ squares: cloneSquares }]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: history.length,\r\n      orderedChecked: cloneOrderChecked,\r\n      copiedOrReversedOrderChecked: cloneOrderChecked,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0,\r\n    });\r\n  }\r\n\r\n  toggleMoves() {\r\n    this.setState({\r\n      isReversedMoves: !this.state.isReversedMoves,\r\n      copiedOrReversedOrderChecked: this.state.copiedOrReversedOrderChecked\r\n        .slice()\r\n        .reverse(),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n\r\n    const result = calculateWinner(current.squares);\r\n    const winner = result && result[0];\r\n    let moves;\r\n    moves = history.map((step, move) => {\r\n      if (this.state.isReversedMoves === true) {\r\n        move = history.length - 1 - move;\r\n      }\r\n      const iCell = this.state.copiedOrReversedOrderChecked[move - 1];\r\n      const nRow = ~~(iCell / 3);\r\n      const nCol = iCell % 3;\r\n      const desc = move\r\n        ? \"Go to move #\" + move + \" (\" + nRow + \", \" + nCol + \")\"\r\n        : \"Go to game start\";\r\n      if (move === this.state.stepNumber) {\r\n        return (\r\n          <li key={move}>\r\n            <button onClick={() => this.jumpTo(move)}>\r\n              <b>{desc}</b>\r\n            </button>\r\n          </li>\r\n        );\r\n      } else {\r\n        return (\r\n          <li key={move}>\r\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n          </li>\r\n        );\r\n      }\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else if (this.state.history.length === 10) {\r\n      status = \"Draw match !\";\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            result={result}\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ul>\r\n            <li>\r\n              <button onClick={this.toggleMoves}>Toggle moves</button>\r\n            </li>\r\n          </ul>\r\n          {this.state.isReversedMoves === false && <ol>{moves}</ol>}\r\n          {this.state.isReversedMoves === true && <ol reversed>{moves}</ol>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return [squares[a], a, b, c];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n"],"sourceRoot":""}
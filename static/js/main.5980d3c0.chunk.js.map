{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","cloneSquares","this","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"2PAiBA,SAASA,EAAOC,GACd,OACE,4BAAQC,UAAU,SAASC,QAAS,kBAAMF,EAAME,YAC7CF,EAAMG,O,IAKPC,E,kDACJ,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACXC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJM,E,wDAQPC,GACV,IAAMC,EAAeC,KAAKP,MAAMC,QAAQO,QACpCC,EAAgBH,IAAiBA,EAAaD,KAGlDC,EAAaD,GAAKE,KAAKP,MAAMI,QAAU,IAAM,IAC7CG,KAAKG,SAAS,CAAET,QAASK,EAAcF,SAAUG,KAAKP,MAAMI,a,mCAGjDC,GAAI,IAAD,OACd,OACE,kBAACX,EAAD,CACEI,MAAOS,KAAKP,MAAMC,QAAQI,GAC1BR,QAAS,kBAAM,EAAKc,YAAYN,Q,+BAMpC,IACIO,EADEC,EAASJ,EAAgBF,KAAKP,MAAMC,SAQ1C,OALEW,EADEC,EACO,WAAaA,EAEb,iBAAmBN,KAAKP,MAAMI,QAAU,IAAM,KAIvD,6BACE,yBAAKR,UAAU,UAAUgB,GACzB,yBAAKhB,UAAU,aACZW,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKlB,UAAU,aACZW,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKlB,UAAU,aACZW,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,S,GApDTC,IAAMC,WA2DpBC,E,uKAEF,OACE,yBAAKrB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,OAEF,yBAAKH,UAAU,aACb,8BACA,mC,GATSmB,IAAMC,WAoBzB,SAASP,EAAgBR,GAWvB,IAVA,IAAMiB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAb,EAAI,EAAGA,EAAIa,EAAMC,OAAQd,IAAK,CAAC,IAAD,cACnBa,EAAMb,GADa,GAC9Be,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIrB,EAAQmB,IAAMnB,EAAQmB,KAAOnB,EAAQoB,IAAMpB,EAAQmB,KAAOnB,EAAQqB,GACpE,OAAOrB,EAAQmB,GAGnB,OAAO,KAnBTG,IAASC,OAAO,kBAACP,EAAD,MAAUQ,SAASC,eAAe,W","file":"static/js/main.5980d3c0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\n// class Square extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <button className=\"square\" onClick={() => this.props.onClick()}>\r\n//         {this.props.value}\r\n//       </button>\r\n//     );\r\n//   }\r\n// }\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={() => props.onClick()}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      squares: Array(9).fill(null),\r\n      xIsNext: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const cloneSquares = this.state.squares.slice();\r\n    if (calculateWinner(cloneSquares) || cloneSquares[i]) {\r\n      return;\r\n    }\r\n    cloneSquares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({ squares: cloneSquares, xIsNext: !this.state.xIsNext });\r\n  }\r\n\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.state.squares[i]}\r\n        onClick={() => this.handleClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const winner = calculateWinner(this.state.squares);\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"status\">{status}</div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{/* status */}</div>\r\n          <ol>{/* TODO */}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n"],"sourceRoot":""}